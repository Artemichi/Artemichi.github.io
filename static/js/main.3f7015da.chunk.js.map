{"version":3,"sources":["Components/Slider/imgSlider.module.css","Components/Slider/imgSliderReducer.js","Components/Slider/Indicators.jsx","Components/Slider/ImgSlider.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","reducer","state","action","type","payload","index","last","Indicators","imgs","dispatch","show","Fragment","defaultStyle","opacity","y","style","spring","stiffness","className","classes","indicatorsList","transform","map","e","i","key","onClick","color","fontSize","ImgSlider","useState","images","showControls","setShowControls","useReducer","idx","carusel","backgroundImage","x","control","prev","length","next","showToggle","current","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3f7015da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"carusel\":\"imgSlider_carusel__82FUQ\",\"control\":\"imgSlider_control__1SMs8\",\"prev\":\"imgSlider_prev__2oPQn\",\"next\":\"imgSlider_next__3QT_z\",\"indicatorsList\":\"imgSlider_indicatorsList__bIJEZ\",\"showToggle\":\"imgSlider_showToggle__2GUnf\"};","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'NEXT_IMG':\r\n      return state === action.payload - 1 ? 0 : state + 1\r\n\r\n    case 'PREV_IMG':\r\n      return action.payload.index === 0 ? action.payload.last : state - 1\r\n\r\n    case 'JUMP_TO':\r\n      return action.payload\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport classes from './imgSlider.module.css'\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport { Motion, spring } from 'react-motion'\r\n\r\nconst Indicators = ({ imgs, index, dispatch, show }) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Motion defaultStyle={{ opacity: 0, y: 200 }} style={{ opacity: spring(show ? 1 : 0, { stiffness: 30 }), y: spring(show ? 0 : 200, { stiffness: 100 }) }}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(style) => (\r\n\t\t\t\t\t\t<ul className={classes.indicatorsList} style={{ opacity: style.opacity, transform: `translateY(${style.y}px)` }}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\timgs.map((e, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<li key={i} onClick={() => dispatch({ type: 'JUMP_TO', payload: i })}>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\ti === index ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RadioButtonCheckedIcon color='inherit' fontSize='small' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RadioButtonUncheckedIcon color='action' fontSize='small' />\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</Motion>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Indicators\r\n","import React, { useState, useReducer } from 'react'\r\nimport classes from './imgSlider.module.css'\r\nimport reducer from './imgSliderReducer'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport Indicators from './Indicators'\r\nimport { Motion, spring } from 'react-motion'\r\n\r\nconst ImgSlider = () => {\r\n  const [images] = useState([\r\n    'https://img5.goodfon.ru/original/1920x1080/d/d3/suslik-rastitelnost-fon-morda.jpg',\r\n    'https://img2.goodfon.ru/original/1920x1080/1/9f/golub-ptitsa-progulka.jpg',\r\n    'https://img5.goodfon.ru/original/1920x1080/9/b9/ptitsa-tupik-portret-fon-atlanticheskii.jpg',\r\n    'https://img5.goodfon.ru/original/1920x1080/0/5d/lisa-ryzhaia-morda-profil-portret-fon.jpg',\r\n  ])\r\n\r\n  const [showControls, setShowControls] = useState(true)\r\n\r\n  const [idx, dispatch] = useReducer(reducer, 0)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* IMAGE */}\r\n      <div\r\n        className={classes.carusel}\r\n        style={{ backgroundImage: `url(${images[idx]})` }}>\r\n        {/* CONTROLS */}\r\n        {/* prev */}\r\n        <Motion\r\n          defaultStyle={{ opacity: 0, x: -200 }}\r\n          style={{\r\n            opacity: spring(showControls ? 1 : 0, { stiffness: 30 }),\r\n            x: spring(showControls ? 0 : -200, { stiffness: 100 }),\r\n          }}>\r\n          {(style) => (\r\n            <button\r\n              style={{\r\n                opacity: style.opacity,\r\n                transform: `translateX(${style.x}px)`,\r\n              }}\r\n              className={`${classes.control} ${classes.prev}`}\r\n              onClick={() =>\r\n                dispatch({\r\n                  type: 'PREV_IMG',\r\n                  payload: { index: idx, last: images.length - 1 },\r\n                })\r\n              }>\r\n              <ArrowBackIcon fontSize='large' color='action' />\r\n            </button>\r\n          )}\r\n        </Motion>\r\n        {/* next */}\r\n        <Motion\r\n          defaultStyle={{ opacity: 0, x: 200 }}\r\n          style={{\r\n            opacity: spring(showControls ? 1 : 0, { stiffness: 30 }),\r\n            x: spring(showControls ? 0 : 200, { stiffness: 100 }),\r\n          }}>\r\n          {(style) => (\r\n            <button\r\n              style={{\r\n                opacity: style.opacity,\r\n                transform: `translateX(${style.x}px)`,\r\n              }}\r\n              className={`${classes.control} ${classes.next}`}\r\n              onClick={() =>\r\n                dispatch({ type: 'NEXT_IMG', payload: images.length })\r\n              }>\r\n              <ArrowForwardIcon fontSize='large' color='action' />\r\n            </button>\r\n          )}\r\n        </Motion>\r\n        {/* toggle */}\r\n        <Motion\r\n          defaultStyle={{ opacity: 0 }}\r\n          style={{ opacity: spring(1, { stiffness: 50 }) }}>\r\n          {(style) => (\r\n            <button\r\n              style={{ opacity: style.opacity }}\r\n              className={classes.showToggle}\r\n              onClick={() => setShowControls((current) => !current)}>\r\n              {showControls ? 'скрыть' : 'показать'}\r\n            </button>\r\n          )}\r\n        </Motion>\r\n        {/* INDICATORS */}\r\n        <Indicators\r\n          imgs={images}\r\n          index={idx}\r\n          dispatch={dispatch}\r\n          show={showControls}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ImgSlider\r\n","import React from 'react'\nimport ImgSlider from './Components/Slider/ImgSlider'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <ImgSlider />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}