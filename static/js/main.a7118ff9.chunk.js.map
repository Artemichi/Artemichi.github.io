{"version":3,"sources":["Components/Slider/imgSlider.module.css","Components/Slider/imgSliderReducer.js","Components/Slider/Indicators.jsx","Components/Slider/Slide.jsx","Components/Slider/ImgSlider.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","reducer","state","action","type","payload","index","last","Indicators","imgs","dispatch","setDir","swingUP","useSpring","from","transform","Fragment","div","style","className","classes","indicatorsList","map","e","i","key","onClick","color","Slide","idx","images","autoPlay","dir","handlers","useSwipeable","onSwipedLeft","length","onSwipedRight","preventDefaultTouchmoveEvent","trackTouch","trackMouse","useTransition","opacity","enter","leave","item","props","carusel","backgroundImage","transformOrigin","ImgSlider","links","likes","info","useState","window","innerWidth","showControls","setShowControls","setAutoPlay","useReducer","controlsFade","React","anchorEl","setAnchorEl","useEffect","play","setInterval","clearInterval","open","Boolean","id","undefined","control","prev","IconButton","aria-label","fontSize","next","settings","aria-describedby","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","Card","root","CardContent","Typography","variant","component","user","Divider","description","location","focus","current","Badge","badgeContent","max","App","setImages","setLinks","setLikes","setInfo","loading","setLoading","PARAMS","Object","values","count","filter","orientation","join","url","a","fetch","method","headers","response","json","urls","regular","optimized","full","name","res","blob","path","URL","createObjectURL","Image","src","paths","Promise","all","getImages","process","then","imagesPaths","width","height","display","justifyContent","alignItems","CircularProgress","size","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a7118ff9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"carusel\":\"imgSlider_carusel__82FUQ\",\"control\":\"imgSlider_control__1SMs8\",\"prev\":\"imgSlider_prev__2oPQn\",\"next\":\"imgSlider_next__3QT_z\",\"indicatorsList\":\"imgSlider_indicatorsList__bIJEZ\",\"settings\":\"imgSlider_settings__3p7hv\",\"likes\":\"imgSlider_likes__2NXQc\"};","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'NEXT_IMG':\r\n      return state === action.payload - 1 ? 0 : state + 1\r\n\r\n    case 'PREV_IMG':\r\n      return action.payload.index === 0 ? action.payload.last : state - 1\r\n\r\n    case 'JUMP_TO':\r\n      return action.payload\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport classes from './imgSlider.module.css'\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nconst Indicators = ({ imgs, index, dispatch, setDir }) => {\r\n  const swingUP = useSpring({\r\n    from: { transform: `translateY(200px)` },\r\n    transform: `translateY(0px)`,\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <animated.div style={swingUP} className={classes.indicatorsList}>\r\n        {imgs.map((e, i) => (\r\n          <div\r\n            key={i}\r\n            onClick={() => {\r\n              setDir(() => (index > i ? 'right' : 'left'))\r\n              dispatch({ type: 'JUMP_TO', payload: i })\r\n            }}\r\n          >\r\n            {i === index ? (\r\n              <RadioButtonCheckedIcon color='inherit' />\r\n            ) : (\r\n              <RadioButtonUncheckedIcon color='inherit' />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </animated.div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Indicators\r\n","import React from 'react'\r\nimport classes from './imgSlider.module.css'\r\nimport { useSwipeable } from 'react-swipeable'\r\nimport { useTransition, animated } from 'react-spring'\r\n\r\nconst Slide = ({ idx, images, dispatch, autoPlay, dir, setDir }) => {\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      setDir('left')\r\n      dispatch({ type: 'NEXT_IMG', payload: images.length })\r\n    },\r\n    onSwipedRight: () => {\r\n      setDir('right')\r\n      dispatch({\r\n        type: 'PREV_IMG',\r\n        payload: { index: idx, last: images.length - 1 },\r\n      })\r\n    },\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackTouch: true,\r\n    trackMouse: true,\r\n  })\r\n\r\n  const transitions = useTransition(images[idx], idx, {\r\n    from: { opacity: 0, transform: 'scale(1)' },\r\n    enter: { opacity: 1, transform: 'scale(1)' },\r\n    leave: { opacity: 0, transform: 'scale(0.7)' },\r\n  })\r\n\r\n  return transitions.map(({ item, props, key }) => (\r\n    <animated.div\r\n      key={key}\r\n      {...handlers}\r\n      className={classes.carusel}\r\n      style={{\r\n        ...props,\r\n        backgroundImage: `url(${item})`,\r\n        transformOrigin: autoPlay ? 'left' : dir,\r\n      }}\r\n    ></animated.div>\r\n  ))\r\n}\r\n\r\nexport default Slide\r\n","import React, { useState, useEffect, useReducer } from 'react'\r\nimport classes from './imgSlider.module.css'\r\nimport reducer from './imgSliderReducer'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport ToggleOffSharpIcon from '@material-ui/icons/ToggleOffSharp'\r\nimport ToggleOnSharpIcon from '@material-ui/icons/ToggleOnSharp'\r\nimport PlayCircleFilledSharpIcon from '@material-ui/icons/PlayCircleFilledSharp'\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport SaveSharpIcon from '@material-ui/icons/SaveSharp'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\r\nimport InfoSharpIcon from '@material-ui/icons/InfoSharp'\r\nimport Popover from '@material-ui/core/Popover'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Indicators from './Indicators'\r\nimport Slide from './Slide'\r\n\r\nconst ImgSlider = ({ images, links, likes, info }) => {\r\n  const [showControls, setShowControls] = useState(() =>\r\n    window.innerWidth > 767 ? true : false\r\n  )\r\n  const [autoPlay, setAutoPlay] = useState(false)\r\n  const [idx, dispatch] = useReducer(reducer, 0)\r\n  const controlsFade = useSpring({ opacity: showControls ? 1 : 0 })\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [dir, setDir] = useState('')\r\n\r\n  useEffect(() => {\r\n    const play = autoPlay\r\n      ? setInterval(\r\n          () => dispatch({ type: 'NEXT_IMG', payload: images.length }),\r\n          4000\r\n        )\r\n      : null\r\n    if (autoPlay) setShowControls(false)\r\n    return () => {\r\n      clearInterval(play)\r\n      setShowControls(() => (window.innerWidth > 767 ? true : false))\r\n    }\r\n  }, [autoPlay, images.length])\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'popover' : undefined\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Slide\r\n        idx={idx}\r\n        images={images}\r\n        dispatch={dispatch}\r\n        autoPlay={autoPlay}\r\n        dir={dir}\r\n        setDir={setDir}\r\n      />\r\n      {/* CONTROLS */}\r\n      <animated.div style={controlsFade}>\r\n        <div className={`${classes.control} ${classes.prev}`}>\r\n          <IconButton\r\n            aria-label='prev'\r\n            color='inherit'\r\n            onClick={() => {\r\n              setDir('right')\r\n              dispatch({\r\n                type: 'PREV_IMG',\r\n                payload: { index: idx, last: images.length - 1 },\r\n              })\r\n            }}\r\n          >\r\n            <ArrowBackIcon fontSize='large' />\r\n          </IconButton>\r\n        </div>\r\n        <div className={`${classes.control} ${classes.next}`}>\r\n          <IconButton\r\n            aria-label='next'\r\n            color='inherit'\r\n            onClick={() => {\r\n              setDir('left')\r\n              dispatch({ type: 'NEXT_IMG', payload: images.length })\r\n            }}\r\n          >\r\n            <ArrowForwardIcon fontSize='large' />\r\n          </IconButton>\r\n        </div>\r\n      </animated.div>\r\n\r\n      {/* SETTINGS */}\r\n      <div className={classes.settings}>\r\n        <IconButton\r\n          aria-describedby={id}\r\n          aria-label='info'\r\n          color='inherit'\r\n          onClick={(event) => setAnchorEl(event.currentTarget)}\r\n        >\r\n          <InfoSharpIcon fontSize='large' />\r\n        </IconButton>\r\n\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={() => setAnchorEl(null)}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Typography color='textSecondary'>Автор</Typography>\r\n              <Typography variant='h6' component='h2'>\r\n                {info[idx].user}\r\n              </Typography>\r\n              <Divider />\r\n\r\n              {info[idx].description ? (\r\n                <>\r\n                  <Typography color='textSecondary'>Описание</Typography>\r\n                  <Typography variant='h6' component='h2'>\r\n                    {info[idx].description}\r\n                  </Typography>\r\n                  <Divider />\r\n                </>\r\n              ) : null}\r\n\r\n              <Typography variant='body2' component='p'>\r\n                {info[idx].location}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Popover>\r\n\r\n        <IconButton\r\n          aria-label='download'\r\n          color='inherit'\r\n          onClick={() => {\r\n            const win = window.open(links[idx])\r\n            win.focus()\r\n          }}\r\n        >\r\n          <SaveSharpIcon fontSize='large' />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label='controls'\r\n          color='inherit'\r\n          onClick={() => setShowControls((current) => !current)}\r\n        >\r\n          {showControls ? (\r\n            <ToggleOnSharpIcon fontSize='large' />\r\n          ) : (\r\n            <ToggleOffSharpIcon fontSize='large' />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label='play'\r\n          color='inherit'\r\n          onClick={() => setAutoPlay((current) => !current)}\r\n        >\r\n          {autoPlay ? (\r\n            <PauseCircleFilledIcon fontSize='large' />\r\n          ) : (\r\n            <PlayCircleFilledSharpIcon fontSize='large' />\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n\r\n      {/* LIKES */}\r\n      <div className={classes.likes}>\r\n        <Badge badgeContent={likes[idx]} max={100} color='primary'>\r\n          {likes[idx] === 0 ? (\r\n            <FavoriteBorderIcon color='error' fontSize='large' />\r\n          ) : (\r\n            <FavoriteIcon color='error' fontSize='large' />\r\n          )}\r\n        </Badge>\r\n      </div>\r\n\r\n      {/* INDICATORS */}\r\n      <Indicators\r\n        imgs={images}\r\n        index={idx}\r\n        dispatch={dispatch}\r\n        setDir={setDir}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ImgSlider\r\n","import React, { useState, useEffect } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport ImgSlider from './Components/Slider/ImgSlider'\r\n\r\nfunction App() {\r\n  const [images, setImages] = useState([])\r\n  const [links, setLinks] = useState([])\r\n  const [likes, setLikes] = useState([])\r\n  const [info, setInfo] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const BASE_URL = 'https://api.unsplash.com/'\r\n    const RANDOM_PHOTO = 'photos/random'\r\n    const KEY = process.env.REACT_APP_API_KEY\r\n    const PARAMS = Object.values({\r\n      count: '&count=8',\r\n      filter: '&content_filter=high',\r\n      orientation: '&orientation=landscape',\r\n    }).join('')\r\n\r\n    const getImages = async (url) => {\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      const json = await response.json()\r\n      const optimized = await json.map((e) => e.urls.regular)\r\n      setLinks(await json.map((e) => e.urls.full))\r\n      setLikes(await json.map((e) => e.likes))\r\n      setInfo(\r\n        await json.map((e) => {\r\n          return {\r\n            user: e.user.name,\r\n            description: e.description,\r\n            location: e.location.name,\r\n          }\r\n        })\r\n      )\r\n      const paths = await optimized.map(async (url) => {\r\n        const res = await fetch(url)\r\n        const blob = await res.blob()\r\n        const path = URL.createObjectURL(blob)\r\n        const img = new Image()\r\n        img.src = path\r\n        return path\r\n      })\r\n      return await Promise.all(paths)\r\n    }\r\n\r\n    getImages(`${BASE_URL}${RANDOM_PHOTO}?client_id=${KEY}${PARAMS}`).then(\r\n      (imagesPaths) => {\r\n        setImages(imagesPaths)\r\n        setLoading(false)\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  return (\r\n    <div className='App'>\r\n      {loading ? (\r\n        <div\r\n          style={{\r\n            width: '100vw',\r\n            height: '100vh',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: '#f44336',\r\n          }}\r\n        >\r\n          <CircularProgress color='inherit' size={70} />\r\n        </div>\r\n      ) : (\r\n        <ImgSlider images={images} links={links} likes={likes} info={info} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}