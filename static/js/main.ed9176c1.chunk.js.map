{"version":3,"sources":["Components/Slider/imgSlider.module.css","Components/Slider/imgSliderReducer.js","Components/Slider/Indicators.jsx","Components/Slider/Slide.jsx","Components/Slider/ImgSlider.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","reducer","state","action","type","payload","index","last","Indicators","imgs","dispatch","swingUP","useSpring","from","transform","Fragment","div","style","className","classes","indicatorsList","map","e","i","key","onClick","color","Slide","idx","images","autoPlay","useState","setState","handlers","useSwipeable","onSwipedLeft","length","onSwipedRight","preventDefaultTouchmoveEvent","trackTouch","trackMouse","useTransition","opacity","enter","leave","config","molasses","item","props","carusel","backgroundImage","transformOrigin","ImgSlider","links","likes","window","innerWidth","showControls","setShowControls","setAutoPlay","useReducer","controlsFade","useEffect","play","setInterval","clearInterval","control","prev","IconButton","aria-label","fontSize","next","settings","open","focus","current","Badge","badgeContent","max","App","setImages","downloadLinks","setDownloadLinks","loading","setLoading","currentLikes","setCurrentLikes","PARAMS","Object","values","count","filter","orientation","join","url","a","fetch","method","headers","response","json","urls","regular","full","res","blob","path","URL","createObjectURL","Image","src","paths","Promise","all","getImages","process","then","imagesPaths","width","height","display","justifyContent","alignItems","CircularProgress","size","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed9176c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"carusel\":\"imgSlider_carusel__82FUQ\",\"control\":\"imgSlider_control__1SMs8\",\"prev\":\"imgSlider_prev__2oPQn\",\"next\":\"imgSlider_next__3QT_z\",\"indicatorsList\":\"imgSlider_indicatorsList__bIJEZ\",\"settings\":\"imgSlider_settings__3p7hv\",\"likes\":\"imgSlider_likes__2NXQc\"};","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'NEXT_IMG':\r\n      return state === action.payload - 1 ? 0 : state + 1\r\n\r\n    case 'PREV_IMG':\r\n      return action.payload.index === 0 ? action.payload.last : state - 1\r\n\r\n    case 'JUMP_TO':\r\n      return action.payload\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport classes from './imgSlider.module.css'\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nconst Indicators = ({ imgs, index, dispatch }) => {\r\n  const swingUP = useSpring({\r\n    from: { transform: `translateY(200px)` },\r\n    transform: `translateY(0px)`,\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <animated.div style={swingUP} className={classes.indicatorsList}>\r\n        {imgs.map((e, i) => (\r\n          <div\r\n            key={i}\r\n            onClick={() => dispatch({ type: 'JUMP_TO', payload: i })}>\r\n            {i === index ? (\r\n              <RadioButtonCheckedIcon color='inherit' />\r\n            ) : (\r\n              <RadioButtonUncheckedIcon color='action' />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </animated.div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Indicators\r\n","import React, { useState } from 'react'\r\nimport classes from './imgSlider.module.css'\r\nimport { useSwipeable } from 'react-swipeable'\r\nimport { useTransition, animated, config } from 'react-spring'\r\n\r\nconst Slide = ({ idx, images, dispatch, autoPlay }) => {\r\n  const [state, setState] = useState('')\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      setState('left')\r\n      dispatch({ type: 'NEXT_IMG', payload: images.length })\r\n    },\r\n    onSwipedRight: () => {\r\n      setState('right')\r\n      dispatch({\r\n        type: 'PREV_IMG',\r\n        payload: { index: idx, last: images.length - 1 },\r\n      })\r\n    },\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackTouch: true,\r\n    trackMouse: true,\r\n  })\r\n\r\n  const transitions = useTransition(images[idx], idx, {\r\n    from: { opacity: 0, transform: 'scale(1)' },\r\n    enter: { opacity: 1, transform: 'scale(1)' },\r\n    leave: { opacity: 0, transform: 'scale(0.7)' },\r\n    config: config.molasses,\r\n  })\r\n\r\n  return transitions.map(({ item, props, key }) => (\r\n    <animated.div\r\n      key={key}\r\n      {...handlers}\r\n      className={classes.carusel}\r\n      style={{\r\n        ...props,\r\n        backgroundImage: `url(${item})`,\r\n        transformOrigin: autoPlay ? 'left' : state,\r\n      }}\r\n    ></animated.div>\r\n  ))\r\n}\r\n\r\nexport default Slide\r\n","import React, { useState, useEffect, useReducer } from 'react'\r\nimport classes from './imgSlider.module.css'\r\nimport reducer from './imgSliderReducer'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport ToggleOnOutlinedIcon from '@material-ui/icons/ToggleOnOutlined'\r\nimport ToggleOffOutlinedIcon from '@material-ui/icons/ToggleOffOutlined'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled'\r\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Indicators from './Indicators'\r\nimport Slide from './Slide'\r\n\r\nconst ImgSlider = ({ images, links, likes }) => {\r\n  const [showControls, setShowControls] = useState(() =>\r\n    window.innerWidth > 767 ? true : false\r\n  )\r\n  const [autoPlay, setAutoPlay] = useState(false)\r\n  const [idx, dispatch] = useReducer(reducer, 0)\r\n  const controlsFade = useSpring({ opacity: showControls ? 1 : 0 })\r\n\r\n  useEffect(() => {\r\n    const play = autoPlay\r\n      ? setInterval(\r\n          () => dispatch({ type: 'NEXT_IMG', payload: images.length }),\r\n          4000\r\n        )\r\n      : null\r\n    if (autoPlay) setShowControls(false)\r\n    return () => {\r\n      clearInterval(play)\r\n      setShowControls(() => (window.innerWidth > 767 ? true : false))\r\n    }\r\n  }, [autoPlay, images.length])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Slide\r\n        idx={idx}\r\n        images={images}\r\n        dispatch={dispatch}\r\n        autoPlay={autoPlay}\r\n      />\r\n      {/* CONTROLS */}\r\n      <animated.div style={controlsFade}>\r\n        <div className={`${classes.control} ${classes.prev}`}>\r\n          <IconButton\r\n            aria-label='prev'\r\n            color='inherit'\r\n            onClick={() =>\r\n              dispatch({\r\n                type: 'PREV_IMG',\r\n                payload: { index: idx, last: images.length - 1 },\r\n              })\r\n            }\r\n          >\r\n            <ArrowBackIcon fontSize='large' />\r\n          </IconButton>\r\n        </div>\r\n        <div className={`${classes.control} ${classes.next}`}>\r\n          <IconButton\r\n            aria-label='next'\r\n            color='inherit'\r\n            onClick={() =>\r\n              dispatch({ type: 'NEXT_IMG', payload: images.length })\r\n            }\r\n          >\r\n            <ArrowForwardIcon fontSize='large' />\r\n          </IconButton>\r\n        </div>\r\n      </animated.div>\r\n\r\n      {/* SETTINGS */}\r\n      <div className={classes.settings}>\r\n        <IconButton\r\n          aria-label='download'\r\n          color='inherit'\r\n          onClick={() => {\r\n            const win = window.open(links[idx])\r\n            win.focus()\r\n          }}\r\n        >\r\n          <CloudDownloadOutlinedIcon fontSize='large' />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label='controls'\r\n          color='inherit'\r\n          onClick={() => setShowControls((current) => !current)}\r\n        >\r\n          {showControls ? (\r\n            <ToggleOnOutlinedIcon fontSize='large' />\r\n          ) : (\r\n            <ToggleOffOutlinedIcon color='action' fontSize='large' />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label='play'\r\n          color='inherit'\r\n          onClick={() => setAutoPlay((current) => !current)}\r\n        >\r\n          {autoPlay ? (\r\n            <PauseCircleFilledIcon color='action' fontSize='large' />\r\n          ) : (\r\n            <PlayArrowIcon fontSize='large' />\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n\r\n      {/* LIKES */}\r\n      <div className={classes.likes}>\r\n        <Badge badgeContent={likes[idx]} max={100} color='primary'>\r\n          {likes[idx] === 0 ? (\r\n            <FavoriteBorderIcon color='error' fontSize='large' />\r\n          ) : (\r\n            <FavoriteIcon color='error' fontSize='large' />\r\n          )}\r\n        </Badge>\r\n      </div>\r\n\r\n      {/* INDICATORS */}\r\n      <Indicators imgs={images} index={idx} dispatch={dispatch} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ImgSlider\r\n","import React, { useState, useEffect } from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport ImgSlider from './Components/Slider/ImgSlider'\n\nfunction App() {\n  const [images, setImages] = useState([])\n\n  const [downloadLinks, setDownloadLinks] = useState([])\n\n  const [loading, setLoading] = useState(true)\n\n  const [currentLikes, setCurrentLikes] = useState([])\n\n  useEffect(() => {\n    const BASE_URL = 'https://api.unsplash.com/'\n    const RANDOM_PHOTO = 'photos/random'\n    const KEY = process.env.REACT_APP_API_KEY\n    const PARAMS = Object.values({\n      count: '&count=8',\n      filter: '&content_filter=high',\n      orientation: '&orientation=landscape',\n    }).join('')\n\n    const getImages = async (url) => {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      const json = await response.json()\n      const urls = await json.map((e) => e.urls.regular)\n      setDownloadLinks(await json.map((e) => e.urls.full))\n      setCurrentLikes(await json.map((e) => e.likes))\n      const paths = await urls.map(async (url) => {\n        const res = await fetch(url)\n        const blob = await res.blob()\n        const path = URL.createObjectURL(blob)\n        const img = new Image()\n        img.src = path\n        return path\n      })\n      return await Promise.all(paths)\n    }\n\n    getImages(`${BASE_URL}${RANDOM_PHOTO}?client_id=${KEY}${PARAMS}`).then(\n      (imagesPaths) => {\n        setImages(imagesPaths)\n        setLoading(false)\n      }\n    )\n  }, [])\n\n  return (\n    <div className='App'>\n      {loading ? (\n        <div\n          style={{\n            width: '100vw',\n            height: '100vh',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: '#f44336',\n          }}>\n          <CircularProgress color='inherit' size={70} />\n        </div>\n      ) : (\n        <ImgSlider images={images} links={downloadLinks} likes={currentLikes} />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}